{"ast":null,"code":"var _jsxFileName = \"/Users/samkitshah/CLionProjects/CSVUploader/frontend/src/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!file) {\n      setUploadStatus('No file selected.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (response.ok) {\n        setUploadStatus('File uploaded successfully!');\n      } else {\n        setUploadStatus('Failed to upload file. Please try again.');\n      }\n    }).catch(error => {\n      setUploadStatus(`Error: ${error.message}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload CSV File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"TrDKe7Vv9s9wZuOzXNj8ZJyQMao=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","uploadStatus","setUploadStatus","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","fetch","method","body","then","response","ok","catch","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/samkitshah/CLionProjects/CSVUploader/frontend/src/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  \n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!file) {\n      setUploadStatus('No file selected.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => {\n        if (response.ok) {\n          setUploadStatus('File uploaded successfully!');\n        } else {\n          setUploadStatus('Failed to upload file. Please try again.');\n        }\n      })\n      .catch((error) => {\n        setUploadStatus(`Error: ${error.message}`);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Upload CSV File</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" onChange={handleFileChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n      {uploadStatus && <p>{uploadStatus}</p>}\n    </div>\n  );\n};\n\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACT,IAAI,EAAE;MACTG,eAAe,CAAC,mBAAmB,CAAC;MACpC;IACF;IAEA,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7Ba,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACR,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACff,eAAe,CAAC,6BAA6B,CAAC;MAChD,CAAC,MAAM;QACLA,eAAe,CAAC,0CAA0C,CAAC;MAC7D;IACF,CAAC,CAAC,CACDgB,KAAK,CAAEC,KAAK,IAAK;MAChBjB,eAAe,CAAC,UAAUiB,KAAK,CAACC,OAAO,EAAE,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB7B,OAAA;MAAM8B,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBAC3BzB,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEzB;MAAiB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjD7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNxB,YAAY,iBAAIL,OAAA;MAAAyB,QAAA,EAAIpB;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA5CID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}